% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/watershedDelineation.R
\encoding{UTF-8}
\name{watershedDelineation}
\alias{watershedDelineation}
\title{Watershed delineation based on pour points}
\usage{
watershedDelineation(
  stationsPath,
  flowAcumPath,
  flowDir8Path,
  bufferSearch = 1000,
  outputDirPath
)
}
\arguments{
\item{stationsPath}{character vector. Shapefile path of ANA fluviometric stations}

\item{flowAcumPath}{character vector. Flow Accumulation raster path}

\item{flowDir8Path}{character vector. Flow direction raster path}

\item{bufferSearch}{value. Search radius in meters to snap pour points}

\item{outputDirPath}{character vector. Output directory path}
}
\value{
\itemize{
\item nested and unested watersheds in raster and shape format
\item snaped pour points
}

#' @references
whitetoolbox package (https://cran.r-project.org/web/packages/whitebox/index.html)
}
\description{
This function delineates watershed boundaries. See details.
}
\details{
\itemize{
\item Stations shapefile must include a 'sttn_cd' column containing numerical identifiers for stations.
\item station shapefile must include an 'area_km2' column containing area values for stations. If the area is not known, leave it empty. However, the column must exist.
\item The delineation could be based on two algorithms: (1)
Pour points are snapped based on river proximity.
The algorithm chooses the river point with the biggest flow accumulation value.
This function is particularly useful when the basin area value is not known in advance.
This function delineates watershed boundaries based on the area value displayed in ANA fluviometric station data.
}

shapefiles and rasters must be at same projection coordinate system (metric)
}
\examples{

\dontrun{
#stations in area of interest

stations = inventory(
  stationType = "flu",
  as_sf = T,
  aoi = sf::st_read("./example/data/aoi_example.shp")
)

# omit station with area equal NA, reproject to epsg of dem and export it

sf::st_write(
  na.omit(stations) \%>\% sf::st_transform(crs = "epsg:32723"),
  dsn = "./example/results/stations_aoi.shp",
  delete_dsn = TRUE, delete_layer = TRUE
)

#run watersheDelimit
watershedDelineation(
  stationsPath = "./example/results/stations_aoi.shp",
  flowAcumPath = "./example/results/demproducts/03flowAccumulation.tif",
  flowDir8Path = "./example/results/demproducts/03flowDirection.tif",
  bufferSearch = 1000,
  outputDirPath = "./example/results/watershedsDelimit"
)

}

}
